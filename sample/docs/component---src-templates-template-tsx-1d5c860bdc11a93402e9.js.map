{"version":3,"sources":["webpack://gatsby-antd-docs/./node_modules/@babel/runtime/helpers/construct.js","webpack://gatsby-antd-docs/./src/templates/template.tsx","webpack://gatsby-antd-docs/./node_modules/gatsby-plugin-mdx/index.js","webpack://gatsby-antd-docs/./node_modules/gatsby-plugin-mdx/mdx-renderer.js"],"names":["setPrototypeOf","isNativeReflectConstruct","_construct","Parent","args","Class","module","exports","Reflect","construct","__esModule","a","push","apply","instance","Function","bind","prototype","arguments","mdx","data","sidebarRoot","frontmatter","root","MDXRenderer","body","require","React","useMDXScope","scope","children","props","mdxScope","End","fullScope","keys","Object","values","key","fn"],"mappings":"4GAAA,IAAIA,EAAiB,EAAQ,MAEzBC,EAA2B,EAAQ,MAEvC,SAASC,EAAWC,EAAQC,EAAMC,GAiBhC,OAhBIJ,KACFK,EAAOC,QAAUL,EAAaM,QAAQC,UACtCH,EAAOC,QAAP,QAA4BD,EAAOC,QAASD,EAAOC,QAAQG,YAAa,IAExEJ,EAAOC,QAAUL,EAAa,SAAoBC,EAAQC,EAAMC,GAC9D,IAAIM,EAAI,CAAC,MACTA,EAAEC,KAAKC,MAAMF,EAAGP,GAChB,IACIU,EAAW,IADGC,SAASC,KAAKH,MAAMV,EAAQQ,IAG9C,OADIN,GAAOL,EAAec,EAAUT,EAAMY,WACnCH,GAGTR,EAAOC,QAAP,QAA4BD,EAAOC,QAASD,EAAOC,QAAQG,YAAa,GAGnER,EAAWW,MAAM,KAAMK,WAGhCZ,EAAOC,QAAUL,EACjBI,EAAOC,QAAP,QAA4BD,EAAOC,QAASD,EAAOC,QAAQG,YAAa,G,2ECDxE,UAnBA,YAA+C,IAAfS,EAAc,EAAtBC,KAAQD,IAC9B,OACE,gBAAC,IAAD,CAAQE,YAAaF,EAAIG,YAAYC,MACnC,gBAAC,EAAAC,YAAD,KAAcL,EAAIM,S,qBCFxB,IAAMD,EAAcE,EAApB,MAEApB,UAAiB,CACfkB,YADFlB,I,spBCRA,IAAMqB,EAAQD,EAAd,MACQP,EAAQO,EAAhB,UACQE,EAAgBF,EAAxB,kBAEApB,EAAA,QAAiB,SAAqB,GACpCuB,MAGC,EAHDA,MACAC,EAEC,EAFDA,SACGC,EACF,OACKC,EAAWJ,EAAjB,GAGMK,EAAMN,WAAc,WACxB,MACE,OAAO,KAGT,IAAMO,EAAS,GAGbP,MAHa,EAIbR,IAJa,GAAf,GAQMgB,EAAOC,YAAb,GACMC,EAASF,OAAS,SAAAG,GAAG,OAAIJ,EAAJ,MAG3B,OAFQ,mCAAR,KAEOK,2BAAP,OACC,CAACT,EAlBJ,IAoBA,OAAOH,uBAAP","file":"component---src-templates-template-tsx-1d5c860bdc11a93402e9.js","sourcesContent":["var setPrototypeOf = require(\"./setPrototypeOf.js\");\n\nvar isNativeReflectConstruct = require(\"./isNativeReflectConstruct.js\");\n\nfunction _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    module.exports = _construct = Reflect.construct;\n    module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n  } else {\n    module.exports = _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n\n    module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n  }\n\n  return _construct.apply(null, arguments);\n}\n\nmodule.exports = _construct;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","import React from 'react'\r\nimport { graphql } from 'gatsby'\r\nimport { MDXRenderer } from 'gatsby-plugin-mdx'\r\nimport { RootLayout as Layout } from '../Layout'\r\n\r\nfunction PageTemplate({ data: { mdx } }: any) {\r\n  return (\r\n    <Layout sidebarRoot={mdx.frontmatter.root}>\r\n      <MDXRenderer>{mdx.body}</MDXRenderer>\r\n    </Layout>\r\n  )\r\n}\r\nexport const pageQuery = graphql`\r\n  query BlogPostQuery($id: String) {\r\n    mdx(id: { eq: $id }) {\r\n      id\r\n      frontmatter {\r\n        title\r\n        root\r\n      }\r\n      body\r\n    }\r\n  }\r\n`\r\nexport default PageTemplate\r\n","/**\n * Welcome to gatsby-plugin-mdx!\n *\n * Start reading in gatsby-node.js\n */\n\nconst MDXRenderer = require(`./mdx-renderer`)\n\nmodule.exports = {\n  MDXRenderer: MDXRenderer,\n}\n","const React = require(`react`)\nconst { mdx } = require(`@mdx-js/react`)\nconst { useMDXScope } = require(`./context`)\n\nmodule.exports = function MDXRenderer({\n  scope,\n  children,\n  ...props\n}) {\n  const mdxScope = useMDXScope(scope)\n\n  // Memoize the compiled component\n  const End = React.useMemo(() => {\n    if (!children) {\n      return null\n    }\n\n    const fullScope = {\n      // React is here just in case the user doesn't pass them in\n      // in a manual usage of the renderer\n      React,\n      mdx,\n      ...mdxScope,\n    }\n\n    const keys = Object.keys(fullScope)\n    const values = keys.map(key => fullScope[key])\n    const fn = new Function(`_fn`, ...keys, `${children}`)\n\n    return fn({}, ...values)\n  }, [children, scope])\n\n  return React.createElement(End, {...props })\n}\n"],"sourceRoot":""}
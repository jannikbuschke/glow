name: $(BuildDefinitionName)_$(Year:yyyy).$(Month).$(DayOfMonth)$(Rev:.r)

trigger:
  - main

pool:
  vmImage: "windows-2019"

variables:
  buildConfiguration: "Release"
  system.debug: false
  buildNumber: 0.24.0-$(Rev:.r)
  workingDir: "core-web"

stages:
  - stage: Docs
    jobs:
      - job: run_build
        displayName: Run Build
        steps:
          - checkout: self
            submodules: true

          - powershell: |
              npm -v
              cd glow-docs
              npm i
              npm run build
            displayName: build docs

          - task: CopyFilesOverSSH@0
            displayName: "Securely copy files to the remote machine"
            inputs:
              sshEndpoint: 212.227.10.50
              sourceFolder: glow-docs/build
              targetFolder: /var/www/glow

  - stage: Checks
    jobs:
      # - job: "Check_for_changes"
      #   steps:
      #     - script: echo $(name)
      #     - checkout: self
      #       submodules: "recursive"
      - job: "Publish_nuget"
        steps:
          - checkout: self
            submodules: true

          # - task: NodeTool@0
          #   inputs:
          #     versionSpec: "14.17.5"

          - powershell: |
              npm i --legacy-peer-deps
              npm run bootstrap
              npm run tsc

          # - script: |
          #     echo "good"
          #     echo "nice"
          #     npm i --legacy-peer-deps
          #     echo "zweidrei"
          #     npm run bootstrap
          #     npm run tsc
          #     npm run build core-web
          #     npm run publish core-web
          #     npm run build glow.beta-web
          #     npm run publish glow.beta-web

          - task: Npm@1
            displayName: "npm publish core-web beta (refs/heads/beta)"
            inputs:
              command: custom
              verbose: false
              customCommand: "publish --tag beta"
              customEndpoint: npm
              workingDir: core-web
            continueOnError: true
          # condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/heads/chore/full-pipeline'))

          # - task: Npm@1
          #   displayName: "npm publish beta (refs/heads/beta)"
          #   inputs:
          #     command: custom
          #     verbose: false
          #     customCommand: "publish --tag beta"
          #     publishEndpoint: npm
          #     customEndpoint: npm
          #     workingDir: glow.beta-web
          #   continueOnError: true

          # - task: Npm@1
          #   displayName: "npm publish release (refs/heads/master)"
          #   inputs:
          #     command: publish
          #     verbose: false
          #     publishEndpoint: npm
          #     customEndpoint: npm
          #     workingDir: $(workingDir)
          #   condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/heads/master'))

          - task: NuGetToolInstaller@1
            inputs:
              versionSpec: 6.0

          - task: UseDotNet@2
            displayName: "Use .NET Core sdk"
            inputs:
              packageType: sdk
              version: "6.0.100"
              installationPath: $(Agent.ToolsDirectory)/dotnet

          - task: DotNetCoreCLI@2
            displayName: "dotnet restore"
            inputs:
              command: "restore"

          - task: DotNetCoreCLI@2
            displayName: "dotnet pack"
            inputs:
              command: "pack"
              arguments: "-p:SymbolPackageFormat=snupkg"
              packagesToPack: "**/*.csproj"
              versioningScheme: "byBuildNumber"
              # versionEnvVar: buildNumber

          - script: "ls $(Build.ArtifactStagingDirectory)/*.nupkg"
            displayName: "ls"

          - script: 'dotnet nuget push $(Build.ArtifactStagingDirectory)\*.nupkg --api-key $(nuget_key) --source https://api.nuget.org/v3/index.json'
            displayName: "dotnet nuget push"
